services:
#  legend:
#    # https://docs.docker.com/compose/compose-file/deploy/
#    deploy:
#      replicas: 2
#    build:
#      context: .
#      dockerfile: apps/image/dev.Dockerfile
#    environment:
##      # mongodb://root:1234@mongo-one-db:27017,mongo-two-db:27017,mongo-three-db:27017/?replicaSet=dbrs
##      MONGO_URI: mongodb://mongo.one.db,mongo.two.db,mongo.three.db:27017/?replicaSet=dbrs
##      NODE_ENV: local_development
#      FORCE_COLOR: 3
##      ROOM_CREATOR_SVC_URL: http://mocks:8082
#    volumes:
#      - ./apps/image/src:/app/apps/image/src
##      - /app/apps/image/node_modules
##      - /app/apps/image/dist
##    ports:
##      - 3020:3020
#    expose:
#      - 3020
#  nginx:
#    image: nginx:alpine
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf
#    ports:
#      - "3020:3020"
#    depends_on:
#      - legend
#  adminer:
#    image: adminer
#    ports:
#      - 8082:8080
#    environment:
#      - ADMINER_DESIGN=dracula
#    depends_on:
#      - db
  db:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=jorge
      - POSTGRES_DB=test
      - POSTGRES_PASSWORD=1234
    ports:
      - 5454:5432
    healthcheck:
      test: ['CMD-SHELL', "psql -U jorge -d test -c 'SELECT 1'"]
      interval: 2s
      timeout: 5s
      retries: 5
      start_period: 2s

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: 1234
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 5s
      retries: 3
#
#  waiting-for-the-services-to-be-ready:
#    image: hello-world
#    depends_on:
#      db:
#        condition: service_healthy
